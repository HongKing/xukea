<?xml version="1.0" encoding="UTF-8"?>
<!-- 加载顺序：listener >> filter >> servlet >> spring  -->
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.4"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	
	<!--如果不设，默认为web.root,但最好设置，以免项目间冲突 -->  
	<context-param>       
		<param-name>webAppRootKey</param-name>        
		<param-value>admin.xukea.com</param-value>   
	</context-param>
	
	<!-- session超时定义,单位为分钟 -->
	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>
	
	<!-- 默认首页定义 -->
	<welcome-file-list>
		<welcome-file>home.jsp</welcome-file>
		<welcome-file>home.html</welcome-file>
	</welcome-file-list>
	
	<!-- Error Page定义 -->
    <error-page>
        <error-code>404</error-code>
        <location>/commons/404.jsp</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/commons/403.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/commons/error.jsp</location>
    </error-page>
	
	
	
	
    <!-- ===================================================== -->  
    <!--                       以下不可修改                                                       -->  
    <!-- ===================================================== -->

    <!-- Spring MVC配置 -->
    <servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- Configure DispatcherServlet to use AnnotationConfigWebApplicationContext
		instead of the default XmlWebApplicationContext 
		<init-param>
			<param-name>contextClass</param-name>
			<param-value>
			     org.springframework.web.context.support.AnnotationConfigWebApplicationContext
			</param-value>
		</init-param>-->
		<!-- Again, config locations must consist of one or more comma- or space-delimited
		and fully-qualified @Configuration classes 
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc-servlet.xml</param-value>
		</init-param>-->
		<load-on-startup>1</load-on-startup>
	</servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

  
    <!-- JPEG 验证码-->
    <servlet>
        <servlet-name>captchaJpeg</servlet-name>
        <servlet-class>com.xukea.framework.util.captcha.JpegServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>captchaJpeg</servlet-name>
        <url-pattern>/captcha.jpg</url-pattern>
    </servlet-mapping>
    
	<!-- Spring ApplicationContext配置文件的路径,可使用通配符，多个路径用,号分隔，此参数用于后面的Spring-Context loader -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring/*.xml</param-value>
	</context-param>
	
	<!-- 默认i18n资源文件，国际化迁移到spring-mvc配置文件中，此处无效
	<context-param>
		<param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
		<param-value>i18n/messages</param-value>
	</context-param>
	<context-param>
		<param-name>extremecomponentsMessagesLocation</param-name>
		<param-value>i18n/messages</param-value>
	</context-param>
	 -->
	<!-- 著名 Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

	<!-- ExtremeTable 导出Excel和Pdf的Filter -->
	<!--
	<filter>
		<filter-name>eXtremeExport</filter-name>
		<filter-class>org.extremecomponents.table.filter.ExportFilter</filter-class>
	</filter>
    <filter-mapping>
        <filter-name>eXtremeExport</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	-->
	
    
    <!-- Spring log4j  -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    
	<!-- Spring ApplicationContext 载入 -->
	<!-- Bootstrap the root application context as usual using ContextLoaderListener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 使Spring支持request与session的scope,如:<bean id="loginAction" class="com.foo.LoginAction" scope="request"/> -->
	<listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
    
	<!-- session超时 -->
    <listener>
        <listener-class>com.xukea.common.listener.SessionListener</listener-class>
    </listener>
    
    <!-- 浏览器不支持put,delete等method,由该filter将/blog?_method=delete转换为标准的http delete方法 -->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>com.xukea.framework.filter.HiddenHttpMethodFilter</filter-class>
        <init-param>
            <param-name>methodParam</param-name>
            <param-value>_method</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <servlet-name>springmvc</servlet-name>
    </filter-mapping>
    
    <!--  
    <filter>
        <filter-name>RestUrlRewriteFilter</filter-name>
        <filter-class>com.xukea.framework.filter.RestUrlRewriteFilter</filter-class>
        <init-param>
            <param-name>prefix</param-name>
            <param-value>/static</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>RestUrlRewriteFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->
    
    <!-- 防SQL注入拦截器 -->
    <filter>
        <filter-name>sqlGuardFilter</filter-name>
        <filter-class>com.xukea.common.filter.SqlGuardFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>sqlGuardFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!-- taglib引用 -->
    <jsp-config>
        <taglib>
            <taglib-uri>/tags/jstl-core</taglib-uri>
            <taglib-location>/WEB-INF/tld/c.tld</taglib-location>
        </taglib>
        <taglib>
            <taglib-uri>/tags/jstl-fmt</taglib-uri>
            <taglib-location>/WEB-INF/tld/fmt.tld</taglib-location>
        </taglib>
        <taglib>
            <taglib-uri>/tags/jstl-functions</taglib-uri>
            <taglib-location>/WEB-INF/tld/fn.tld</taglib-location>
        </taglib>
        <taglib>
            <taglib-uri>/tags/oscache</taglib-uri>
            <taglib-location>/WEB-INF/tld/oscache.tld</taglib-location>
        </taglib>
    </jsp-config>
</web-app>

